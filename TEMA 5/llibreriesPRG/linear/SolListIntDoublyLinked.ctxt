#BlueJ class context
comment0.target=SolListIntDoublyLinked
comment0.text=\r\n\ Classe\ ListIntDoublyLinked\:\ implementaci\u00F3\ d'una\ llista\ doblement\r\n\ enlla\u00E7ada,\ de\ manera\ que\ cada\ node\ t\u00E9\ una\ refer\u00E8ncia\ tant\ al\ node\r\n\ seg\u00FCent\ com\ al\ node\ anterior.\r\n\ \r\n\ @author\ PRG\ -\ Activitat\ de\ refor\u00E7\r\n\ @version\ Curs\ 2019/20\r\n
comment1.params=
comment1.target=SolListIntDoublyLinked()
comment1.text=Crea\ una\ llista\ buida.
comment2.params=x
comment2.target=void\ inserir(int)
comment2.text=\ Insereix\ un\ nou\ node\ amb\ l'element\ x\ en\ el\ cap\ de\ la\ llista,\r\n\ \ \u00E9s\ a\ dir,\ el\ nou\ node\ ser\u00E0\ el\ primer\ de\ la\ llista.\r\n\ \ @param\ x\ int\ a\ afegir\ en\ la\ llista.\r\n
comment3.params=x
comment3.target=void\ inserirFi(int)
comment3.text=\ Insereix\ un\ nou\ node\ amb\ l'element\ x\ al\ final\ de\ la\ llista,\r\n\ \ \u00E9s\ a\ dir,\ el\ nou\ node\ ser\u00E0\ l'\u00FAltim\ de\ la\ llista.\r\n\ \ @param\ x\ int\ a\ afegir\ en\ la\ llista.\r\n
comment4.params=
comment4.target=void\ esborrarIni()
comment4.text=Esborra,\ si\ existeix,\ el\ primer\ node\ de\ la\ llista.
comment5.params=
comment5.target=void\ esborrarFi()
comment5.text=Esborra,\ si\ existeix,\ el\ darrer\ node\ de\ la\ llista.
comment6.params=x
comment6.target=void\ esborrar(int)
comment6.text=\ Esborra,\ si\ existeix,\ la\ primera\ ocurr\u00E8ncia\ d'una\r\n\ \ dada\ donada.\ Si\ no\ existeix,\ no\ fa\ res.\r\n\ \ @param\ x\ int\ a\ esborrar\ de\ la\ llista.\r\n
comment7.params=
comment7.target=java.lang.String\ toString()
comment7.text=\ Obt\u00E9\ un\ String\ amb\ totes\ les\ dades\ de\ la\ llista\ en\r\n\ \ sentit\ ascendent\ (des\ del\ primer\ node\ fins\ l'\u00FAltim).\r\n\ \ Si\ la\ llista\ est\u00E0\ buida,\ torna\ la\ cadena\ buida.\r\n\ \ Exemple\:\ si\ les\ dades\ son\ 2,\ 15\ i\ 8,\ el\ String\ \r\n\ \ resultat\ sera\ "2\ 15\ 8\ "\r\n\ \ @return\ String,\ resultat.\r\n
comment8.params=
comment8.target=java.lang.String\ toStringDescendent()
comment8.text=\ Obt\u00E9\ un\ String\ amb\ totes\ les\ dades\ de\ la\ llista\ en\r\n\ \ sentit\ descendent\ (des\ de\ l'\u00FAltim\ node\ fins\ el\ primer).\r\n\ \ Si\ la\ llista\ est\u00E0\ buida,\ torna\ la\ cadena\ buida.\r\n\ \ Exemple\:\ si\ les\ dades\ son\ 2,\ 15\ i\ 8,\ el\ String\ \r\n\ \ resultat\ sera\ "8\ 15\ 2\ "\r\n\ \ @return\ String,\ resultat.\r\n
numComments=9
